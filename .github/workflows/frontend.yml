name: Frontend CI/CD - GCP

on:
  push:
    branches: [ main ]
    paths:
      - 'stocks-frontend/**'
      - '.github/workflows/frontend.yml'

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION }}
  BUCKET_NAME: stocks-frontend-bucket

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    defaults:
      run:
        working-directory: stocks-frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: stocks-frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Replace API_URL in environment.prod.ts BEFORE build
        env:
          BACKEND_URL: ${{ vars.BACKEND_URL }}
        run: |
          echo "🔧 Replacing \${API_URL} with $BACKEND_URL"
          sed -i "s|\${API_URL}|$BACKEND_URL|g" src/environments/environment.prod.ts
          
          echo "✅ Updated environment.prod.ts:"
          cat src/environments/environment.prod.ts

      - name: Build Angular app
        run: npm run build -- --configuration production

      - name: Verify build output
        run: |
          echo "📦 Build output:"
          ls -lh dist/stocks-frontend/
          
          echo ""
          echo "🔍 Checking if backend URL is in the build:"
          grep -r "stocks-backend-service" dist/stocks-frontend/*.js && echo "✅ Backend URL found!" || echo "❌ Backend URL NOT found"
          grep -r "localhost:8080" dist/stocks-frontend/*.js && echo "⚠️  localhost still present!" || echo "✅ No localhost found"

      - name: Auth to GCP (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload to Cloud Storage
        working-directory: .
        run: |
          echo "📦 Uploading files to gs://${{ env.BUCKET_NAME }}/"
          gsutil -m rsync -r -c -d stocks-frontend/dist/stocks-frontend gs://${{ env.BUCKET_NAME }}
          echo "✅ Upload complete"

      - name: Configure bucket for website hosting
        working-directory: .
        run: |
          echo "🌐 Configuring bucket as website..."
          gsutil iam ch allUsers:objectViewer gs://${{ env.BUCKET_NAME }}
          gsutil web set -m index.html -e index.html gs://${{ env.BUCKET_NAME }}
          
          cat > cors.json << 'EOF'
          [{"origin": ["*"], "method": ["GET", "HEAD"], "responseHeader": ["Content-Type"], "maxAgeSeconds": 3600}]
          EOF
          gsutil cors set cors.json gs://${{ env.BUCKET_NAME }}
          rm cors.json

      - name: Set Cache-Control headers
        working-directory: .
        run: |
          gsutil -m setmeta -h "Cache-Control:no-cache, no-store, must-revalidate" \
            gs://${{ env.BUCKET_NAME }}/index.html
          gsutil -m setmeta -h "Cache-Control:public, max-age=31536000, immutable" \
            "gs://${{ env.BUCKET_NAME }}/*.js" 2>/dev/null || true

      - name: Display deployment info
        run: |
          echo ""
          echo "🎉 Frontend Deployed!"
          echo "📍 https://storage.googleapis.com/${{ env.BUCKET_NAME }}/index.html"
          echo "🌐 https://${{ env.BUCKET_NAME }}.storage.googleapis.com/index.html"
          echo "🔗 Backend: ${{ vars.BACKEND_URL }}"
